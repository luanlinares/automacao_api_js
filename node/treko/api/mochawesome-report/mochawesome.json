{
  "stats": {
    "suites": 14,
    "tests": 13,
    "passes": 13,
    "pending": 0,
    "failures": 0,
    "start": "2020-04-27T04:20:44.101Z",
    "end": "2020-04-27T04:20:44.403Z",
    "duration": 302,
    "testsRegistered": 13,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "4a5819fe-8da4-4f10-aa4b-e867ab02e3a0",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "b85c3121-ece7-47f1-a594-4a22a671805a",
          "title": "delete",
          "fullFile": "C:\\Users\\luanl\\Documents\\Projetos\\automacao_api_js\\node\\treko\\api\\test\\delete.spec.js",
          "file": "\\test\\delete.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "51e0d983-e1c4-4b41-bcfc-1c9f8dc63a3c",
              "title": "quando apago uma tarefa",
              "fullFile": "C:\\Users\\luanl\\Documents\\Projetos\\automacao_api_js\\node\\treko\\api\\test\\delete.spec.js",
              "file": "\\test\\delete.spec.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook",
                  "fullTitle": "delete quando apago uma tarefa \"before all\" hook",
                  "timedOut": false,
                  "duration": 1,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_task2.default.insertMany([task]);\ndone();",
                  "err": {},
                  "uuid": "9761fdd9-75b2-4d2e-9e64-b54cd8e234c5",
                  "parentUUID": "51e0d983-e1c4-4b41-bcfc-1c9f8dc63a3c",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [
                {
                  "title": "\"after all\" hook",
                  "fullTitle": "delete quando apago uma tarefa \"after all\" hook",
                  "timedOut": false,
                  "duration": 12,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request.get('/task/' + task._id).end(function (err, res) {\n    expect(res).to.has.status(404);\n    done();\n});",
                  "err": {},
                  "uuid": "87682e11-5b19-4678-87e9-ea20cf8f14a9",
                  "parentUUID": "51e0d983-e1c4-4b41-bcfc-1c9f8dc63a3c",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "tests": [
                {
                  "title": "deve retornar 200",
                  "fullTitle": "delete quando apago uma tarefa deve retornar 200",
                  "timedOut": false,
                  "duration": 27,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request.delete('/task/' + task._id).end(function (err, res) {\n    expect(res).to.have.status(200);\n    expect(res.body).to.eql({});\n    done();\n});",
                  "err": {},
                  "uuid": "3de30ab4-1c5c-4ea0-8ee4-ffe1519156de",
                  "parentUUID": "51e0d983-e1c4-4b41-bcfc-1c9f8dc63a3c",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "3de30ab4-1c5c-4ea0-8ee4-ffe1519156de"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 27,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "b0bcb155-53be-45ab-b7c4-555bc9518fd0",
              "title": "deletar tarefa inexistente",
              "fullFile": "C:\\Users\\luanl\\Documents\\Projetos\\automacao_api_js\\node\\treko\\api\\test\\delete.spec.js",
              "file": "\\test\\delete.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "deve retornar 404",
                  "fullTitle": "delete deletar tarefa inexistente deve retornar 404",
                  "timedOut": false,
                  "duration": 11,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var id = require('mongoose').Types.ObjectId();\nrequest.delete('/task/' + _task2.default._id).end(function (err, res) {\n    expect(res).to.have.status(404);\n    expect(res.body).to.eql({});\n    done();\n});",
                  "err": {},
                  "uuid": "62dd9503-6952-460f-ab2d-8f514b438aa3",
                  "parentUUID": "b0bcb155-53be-45ab-b7c4-555bc9518fd0",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "62dd9503-6952-460f-ab2d-8f514b438aa3"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 11,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "1a7d9728-4000-4089-9f65-cf4f9b317fb7",
          "title": "get",
          "fullFile": "C:\\Users\\luanl\\Documents\\Projetos\\automacao_api_js\\node\\treko\\api\\test\\get.spec.js",
          "file": "\\test\\get.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "4447b1c7-605d-4264-b3fd-2a4e5b348d9e",
              "title": "quando eu tenho tarefas cadastradas",
              "fullFile": "C:\\Users\\luanl\\Documents\\Projetos\\automacao_api_js\\node\\treko\\api\\test\\get.spec.js",
              "file": "\\test\\get.spec.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook",
                  "fullTitle": "get quando eu tenho tarefas cadastradas \"before all\" hook",
                  "timedOut": false,
                  "duration": 1,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var tasks = [{ title: 'Estudar NodeJs', owner: 'luanlnrs@gmail.com', done: false }, { title: 'Fazer Compras', owner: 'luanlnrs@gmail.com', done: false }, { title: 'Estudar MongoDB', owner: 'luanlnrs@gmail.com', done: true }];\n_task2.default.insertMany(tasks);\ndone();",
                  "err": {},
                  "uuid": "16431503-160e-4d3e-a7f9-7fee8641e645",
                  "parentUUID": "4447b1c7-605d-4264-b3fd-2a4e5b348d9e",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "deve retornar uma lista",
                  "fullTitle": "get quando eu tenho tarefas cadastradas deve retornar uma lista",
                  "timedOut": false,
                  "duration": 7,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request.get('/task').end(function (err, res) {\n    expect(res).to.has.status(200);\n    //console.log(typeof res.body.data);\n    expect(res.body.data).to.be.an('array');\n    done();\n});",
                  "err": {},
                  "uuid": "7d88002a-9356-4d7e-a605-05324dca47bc",
                  "parentUUID": "4447b1c7-605d-4264-b3fd-2a4e5b348d9e",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "deve filtrar por palavra chave",
                  "fullTitle": "get quando eu tenho tarefas cadastradas deve filtrar por palavra chave",
                  "timedOut": false,
                  "duration": 8,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request.get('/task').query({ title: 'Estudar' }).end(function (err, res) {\n    expect(res).to.has.status(200);\n    expect(res.body.data[0].title).to.equal('Estudar NodeJs');\n    expect(res.body.data[1].title).to.equal('Estudar MongoDB');\n    done();\n});",
                  "err": {},
                  "uuid": "1cf7aef1-4a65-40b0-9059-e5b79ae10013",
                  "parentUUID": "4447b1c7-605d-4264-b3fd-2a4e5b348d9e",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "7d88002a-9356-4d7e-a605-05324dca47bc",
                "1cf7aef1-4a65-40b0-9059-e5b79ae10013"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 15,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "28a6db6e-c173-4d2c-9557-9cb55556d967",
              "title": "quando busco por id",
              "fullFile": "C:\\Users\\luanl\\Documents\\Projetos\\automacao_api_js\\node\\treko\\api\\test\\get.spec.js",
              "file": "\\test\\get.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "deve retornar uma única tarefa",
                  "fullTitle": "get quando busco por id deve retornar uma única tarefa",
                  "timedOut": false,
                  "duration": 5,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var tasks = [{ title: 'Ler um livro de javascript', owner: 'luanlnrs@gmail.com', done: false }];\n_task2.default.insertMany(tasks, function (err, result) {\n    var id = result[0]._id;\n    request.get('/task/' + id).end(function (err, res) {\n        expect(res).to.has.status(200);\n        //expect(res.body.data.title).to.equal('Ler um livro de javascript')\n        //Outra forma de validar usando a própria massa de testes\n        expect(res.body.data.title).to.equal(tasks[0].title);\n        done();\n    });\n});",
                  "err": {},
                  "uuid": "52d1e0f4-dbd1-4168-9129-260c5ee7da07",
                  "parentUUID": "28a6db6e-c173-4d2c-9557-9cb55556d967",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "52d1e0f4-dbd1-4168-9129-260c5ee7da07"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 5,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "fae4fadc-681b-44ae-a1d2-82dcac2aba3f",
              "title": "quando o id não existe",
              "fullFile": "C:\\Users\\luanl\\Documents\\Projetos\\automacao_api_js\\node\\treko\\api\\test\\get.spec.js",
              "file": "\\test\\get.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "deve retornar erro 404 - not found ",
                  "fullTitle": "get quando o id não existe deve retornar erro 404 - not found ",
                  "timedOut": false,
                  "duration": 4,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var id = require('mongoose').Types.ObjectId();\nrequest.get('/task/' + id).end(function (err, res) {\n    expect(res).to.has.status(404);\n    expect(res.body).to.eql({});\n    done();\n});",
                  "err": {},
                  "uuid": "1df95b26-198d-463a-8876-cdf65a8630d2",
                  "parentUUID": "fae4fadc-681b-44ae-a1d2-82dcac2aba3f",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "1df95b26-198d-463a-8876-cdf65a8630d2"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 4,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "5749b628-656c-48aa-a529-43c2f197ffed",
          "title": "post",
          "fullFile": "C:\\Users\\luanl\\Documents\\Projetos\\automacao_api_js\\node\\treko\\api\\test\\post.spec.js",
          "file": "\\test\\post.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "9ac23e23-334e-4a6f-a188-221625153b02",
              "title": "quando eu cadastro uma tarefa",
              "fullFile": "C:\\Users\\luanl\\Documents\\Projetos\\automacao_api_js\\node\\treko\\api\\test\\post.spec.js",
              "file": "\\test\\post.spec.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook",
                  "fullTitle": "post quando eu cadastro uma tarefa \"before all\" hook",
                  "timedOut": false,
                  "duration": 13,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "rabbit.delete('/api/queues/%2F/tasksdev/contents').auth('guest', 'guest').end(function (err, res) {\n    expect(res).to.has.status(204);\n    done();\n});",
                  "err": {},
                  "uuid": "138d3837-a898-42dc-ad30-a13a284a82cf",
                  "parentUUID": "9ac23e23-334e-4a6f-a188-221625153b02",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "deve retornar 200 - cadastro com sucesso",
                  "fullTitle": "post quando eu cadastro uma tarefa deve retornar 200 - cadastro com sucesso",
                  "timedOut": false,
                  "duration": 20,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request.post('/task').send(task).end(function (err, res) {\n    expect(res).to.has.status(200);\n    expect(res.body.data.title).to.be.an('string');\n    expect(res.body.data.owner).to.be.an('string');\n    expect(res.body.data.done).to.be.an('boolean');\n    done();\n});",
                  "err": {},
                  "uuid": "f194284b-5cb7-4d3b-9181-1afeb942a72b",
                  "parentUUID": "9ac23e23-334e-4a6f-a188-221625153b02",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "e deve enviar um email",
                  "fullTitle": "post quando eu cadastro uma tarefa e deve enviar um email",
                  "timedOut": false,
                  "duration": 20,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var payload = { vhost: '/', name: 'tasksdev', truncate: '50000', ackmode: 'ack_requeue_true', encoding: 'auto', count: '1' };\n            rabbit.post('/api/queues/%2F/tasksdev/get').auth('guest', 'guest').send(payload).end(function (err, res) {\n                expect(res).to.has.status(200);\n                expect(res.body[0].payload).to.contain('Tarefa ' + task.title + ' criada com sucesso!');\n                done();\n            });",
                  "err": {},
                  "uuid": "e9018000-e4d9-4a99-a678-c1e7ee67a13f",
                  "parentUUID": "9ac23e23-334e-4a6f-a188-221625153b02",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "f194284b-5cb7-4d3b-9181-1afeb942a72b",
                "e9018000-e4d9-4a99-a678-c1e7ee67a13f"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 40,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "aa76f814-8da5-4353-8efc-b2610c43eeba",
              "title": "quando não informo o titulo",
              "fullFile": "C:\\Users\\luanl\\Documents\\Projetos\\automacao_api_js\\node\\treko\\api\\test\\post.spec.js",
              "file": "\\test\\post.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "deve retornar 400 - Not Found",
                  "fullTitle": "post quando não informo o titulo deve retornar 400 - Not Found",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request.post('/task').send(task).end(function (err, res) {\n    expect(res).to.has.status(400);\n    expect(res.body.errors.title.message).to.eql('Título é obrigatório!');\n    done();\n});",
                  "err": {},
                  "uuid": "bd116d21-493d-4a11-a87c-e84ed8da88ff",
                  "parentUUID": "aa76f814-8da5-4353-8efc-b2610c43eeba",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "bd116d21-493d-4a11-a87c-e84ed8da88ff"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 3,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "5ac0735d-70cf-4a02-945c-f419f574478d",
              "title": "quando não informo o owner",
              "fullFile": "C:\\Users\\luanl\\Documents\\Projetos\\automacao_api_js\\node\\treko\\api\\test\\post.spec.js",
              "file": "\\test\\post.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "deve retornar 400 - Bad Request",
                  "fullTitle": "post quando não informo o owner deve retornar 400 - Bad Request",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request.post('/task').send(task).end(function (err, res) {\n    expect(res).to.has.status(400);\n    expect(res.body.errors.owner.message).to.eql('Dono da tarefa é obrigatório!');\n    done();\n});",
                  "err": {},
                  "uuid": "f53ca4e9-2f22-4a8c-ab37-3fb692002b74",
                  "parentUUID": "5ac0735d-70cf-4a02-945c-f419f574478d",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "f53ca4e9-2f22-4a8c-ab37-3fb692002b74"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "34d823f5-0335-4f64-8dbf-d11bf0c94ceb",
              "title": "quando a tarefa já existe",
              "fullFile": "C:\\Users\\luanl\\Documents\\Projetos\\automacao_api_js\\node\\treko\\api\\test\\post.spec.js",
              "file": "\\test\\post.spec.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook",
                  "fullTitle": "post quando a tarefa já existe \"before all\" hook",
                  "timedOut": false,
                  "duration": 4,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request.post('/task').send(task).end(function (err, res) {\n    expect(res).to.has.status(200);\n    done();\n});",
                  "err": {},
                  "uuid": "ad9e4c3c-9ef7-4bc6-889a-9e1b01c65374",
                  "parentUUID": "34d823f5-0335-4f64-8dbf-d11bf0c94ceb",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "deve retornar 409 - Chave Duplicada",
                  "fullTitle": "post quando a tarefa já existe deve retornar 409 - Chave Duplicada",
                  "timedOut": false,
                  "duration": 10,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request.post('/task').send(task).end(function (err, res) {\n    expect(res).to.has.status(409);\n    expect(res.body.errmsg).to.include('duplicate key');\n    done();\n});",
                  "err": {},
                  "uuid": "60b512b6-1990-4bd0-b820-7a9b22b21552",
                  "parentUUID": "34d823f5-0335-4f64-8dbf-d11bf0c94ceb",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "60b512b6-1990-4bd0-b820-7a9b22b21552"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 10,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "6c2abb54-6ebc-4160-a28e-800aebc26356",
          "title": "put",
          "fullFile": "C:\\Users\\luanl\\Documents\\Projetos\\automacao_api_js\\node\\treko\\api\\test\\put.spec.js",
          "file": "\\test\\put.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "0b203725-f4d3-44e9-96f0-b09e9d78da92",
              "title": "quando eu altero uma tarefa",
              "fullFile": "C:\\Users\\luanl\\Documents\\Projetos\\automacao_api_js\\node\\treko\\api\\test\\put.spec.js",
              "file": "\\test\\put.spec.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook",
                  "fullTitle": "put quando eu altero uma tarefa \"before all\" hook",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_task2.default.insertMany([task]);\ndone();",
                  "err": {},
                  "uuid": "97e3ef55-e539-4ae6-8703-2c2fd28bcd44",
                  "parentUUID": "0b203725-f4d3-44e9-96f0-b09e9d78da92",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "deve retornar 200",
                  "fullTitle": "put quando eu altero uma tarefa deve retornar 200",
                  "timedOut": false,
                  "duration": 12,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "task.title = 'Lavar Roupas', task.done = true;\nrequest.put('/task/' + task._id).send(task).end(function (err, res) {\n    expect(res).to.has.status(200);\n    expect(res.body).to.eql({});\n    done();\n});",
                  "err": {},
                  "uuid": "b7624d69-01ae-4012-806d-d48df5e3ac5e",
                  "parentUUID": "0b203725-f4d3-44e9-96f0-b09e9d78da92",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "deve retornar os dados atualizados",
                  "fullTitle": "put quando eu altero uma tarefa deve retornar os dados atualizados",
                  "timedOut": false,
                  "duration": 11,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "request.get('/task/' + task._id).end(function (err, res) {\n    expect(res).to.have.status(200);\n    expect(res.body.data.title).to.eql(task.title);\n    expect(res.body.data.done).to.be.true;\n    done();\n});",
                  "err": {},
                  "uuid": "8a93df6d-ba57-484a-8508-a0f0cfd11de7",
                  "parentUUID": "0b203725-f4d3-44e9-96f0-b09e9d78da92",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "b7624d69-01ae-4012-806d-d48df5e3ac5e",
                "8a93df6d-ba57-484a-8508-a0f0cfd11de7"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 23,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.1.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.1.0"
    },
    "marge": {
      "options": null,
      "version": "5.1.0"
    }
  }
}